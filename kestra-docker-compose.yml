volumes:
  vol-pgdata:
    name: vol-pgdata
  vol-pgadmin_data:
    name: vol-pgadmin_data
  vol-kestra-metadata:
    name: vol-kestra-metadata
  vol-kestra-data:
    name: vol-kestra-data

services:
  kestra-metadata:
    image: postgres:17-alpine
    container_name: kestra-metadata-1
    volumes:
      - vol-kestra-metadata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      retries: 10

  kestra:
    build:
      context: .
      dockerfile: ./Dockerfile.kestra
    container_name: kestra-kestra-1    
    pull_policy: always
    user: "root"
    command: server standalone
    volumes:
      - vol-kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - $HOME/gcs.json:/root/.config/gcloud/gcs.json # mount GCS credential
      - ~/projects:/app/projects  # projects location
      - ~/dbt:/root/.dbt
      - ~/src:/app/scripts

    environment:
      KESTRA_PLUGINS: |
        - groupId: io.kestra.plugin
          artifactId: kestra-plugin-spark
          version: 0.15.0
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://kestra-metadata:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4
        kestra:
          server:
            basicAuth:
              enabled: false
              username: "admin@kestra.io"
              password: kestra
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          url: http://localhost:8080/
    ports:
      - "8080:8080"
      - "8088:8088"
    depends_on:
      kestra-metadata:
        condition: service_healthy

